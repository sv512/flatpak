name: Knights of C Code SonarCloud

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  check:
    name: Build with gcc and test
    runs-on: ubuntu-22.04
    env:
      BUILD_WRAPPER_OUT_DIR: bw-output
    steps:
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libglib2.0-dev attr automake gettext autopoint bison  dbus gtk-doc-tools \
        libfuse3-dev ostree libostree-dev libarchive-dev libzstd-dev libcap-dev libattr1-dev libdw-dev libelf-dev python3-pyparsing \
        libjson-glib-dev shared-mime-info desktop-file-utils libpolkit-agent-1-dev libpolkit-gobject-1-dev \
        libseccomp-dev libsoup2.4-dev libcurl4-openssl-dev libsystemd-dev libxml2-utils libgpgme11-dev gobject-introspection \
        libgirepository1.0-dev libappstream-dev libdconf-dev clang socat meson libdbus-1-dev e2fslibs-dev bubblewrap xdg-dbus-proxy \
        python3-pip meson ninja-build libyaml-dev libstemmer-dev gperf itstool libmalcontent-0-dev gcovr
    - name: Check out flatpak
      uses: actions/checkout@v1
      with:
        submodules: true
    - name: Install sonar-scanner and build-wrapper
      uses: SonarSource/sonarcloud-github-c-cpp@v1
    - name: Build appstream dependency # (We need at least 0.15.3 for the g_once fix)
      run: |
        sudo pip3 install 'meson~=0.62'
        git clone --branch v0.15.4 --depth 1 --no-tags https://github.com/ximion/appstream.git ./appstream
        pushd ./appstream
        meson setup --prefix=/usr _build
        ninja -C _build
        sudo ninja -C _build install
        popd
    - name: Create logs dir
      run: mkdir test-logs
    - name: Configure
      # We don't do gtk-doc or GObject-Introspection here, because they can
      # clash with AddressSanitizer. Instead, the clang build enables those.
      run: |
        meson _build \
          -Dgir=disabled \
          -Dgtkdoc=disabled \
          -Dhttp_backend=curl \
          -Dsystem_bubblewrap=bwrap \
          -Dsystem_dbus_proxy=xdg-dbus-proxy \
          -Db_coverage=true \
          ${NULL+}
      env:
        CFLAGS: -O2 -Wp,-D_FORTIFY_SOURCE=2
    - name: Build flatpak w/ Sonarcloud
      run: build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} ninja -C _build
    - name: Run tests
      run: meson test -C _build
    - name: Generate coverage analysis
      run: ninja -C _build coverage-sonarqube
    - name: Run sonar-scanner
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        sonar-scanner \
          --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" \
          --define sonar.coverageReportPaths=_build/meson-logs/sonarqube.xml \
          --define sonar.coverage.exclusions=*.y
    - name: Collect logs on failure
      if: failure() || cancelled()
      run: mv _build/meson-logs/* test-logs/ || true
    - name: Upload test logs
      uses: actions/upload-artifact@v1
      if: failure() || cancelled()
      with:
        name: test logs
        path: test-logs
